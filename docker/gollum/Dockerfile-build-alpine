# Build a docker image for compile gollum from source.
#
# Build docker image:
#    docker build -t gollum-build:alpine -f Dockerfile-build-alpine .
#
# In wiki directory (git repository), create or run dock container:
#    docker create --name gollum-build-alpine -i -t -p 4567:4567 -v "$PWD":/wiki gollum-build:alpine
#  or
#    docker run --name gollum-build-alpine -i -t -p 4567:4567 -v "$PWD":/wiki gollum-build:alpine
#
# (Re)Start container:
#    docker start -i gollum-build-alpine
#
# Stop container:
#    docker stop gollum-build-alpine
#
#--------------------------------------------------------------------------------
#
# After start container, execute the fellowing commands to compile & run gollum.
#
# cd /home
# git clone https://gitee.com/fhtao/gollum
# cd /home/gollum
# sed -i 's/rubygems.org/gems.ruby-china.com/' Gemfile
# bundle install
# bundle exec bin/gollum --mathjax --port 4567 --adapter rugged --js --css -c /wiki/config.rb /wiki


FROM ruby:2.7.2-alpine3.12

MAINTAINER Fan Hongtao <fanhongtao@gmail.com>

RUN set -eux \
# Switch mirrors for Alpine & Ruby
    && cp /etc/apk/repositories /etc/apk/repositories.bak \
    && echo "http://mirrors.aliyun.com/alpine/v3.12/main/" > /etc/apk/repositories \
    && gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/ \
# Install
    && apk add --no-cache \
            git \
            icu-libs \
            cmake \
            g++ \
            gcc \
            icu-dev \
            libc-dev \
            make \
            openssl-dev \
    && gem install github-linguist

RUN set -eux \
    && apk add --no-cache \
        sudo

RUN addgroup wiki \
    && adduser -G wiki -D wiki \
    && echo wiki:wiki | chpasswd \
# Grant sudo privileges to user 'wiki'
    && echo '%wheel ALL=(ALL) ALL' > /etc/sudoers.d/wheel\
    && adduser wiki wheel \
# Create dir for gollum
    && mkdir /home/gollum \
    && chown wiki:wiki /home/gollum

USER wiki

WORKDIR /wiki
WORKDIR /home/gollum

EXPOSE 4567

CMD [ "/bin/sh" ]
